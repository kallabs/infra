version: "3.7"

services:
  go-api:
    build:
      context: ./idp-api
      target: debug
    environment:
      # go-api specific vars
      SECRET_KEY: ${SECRET_KEY}
      RSA_PUBLIC_KEY: ${RSA_PUBLIC_KEY}
      RSA_PRIVATE_KEY: ${RSA_PRIVATE_KEY}
      # database vars
      DATABASE_URI: "postgres://${PG_USER}:${PG_PASSWORD}@${PG_HOST}:${PG_PORT}/${PG_IDP_DATABASE}?sslmode=disable"
      # smtp server vars
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USERNAME: ${SMTP_USERNAME}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
    restart: always
    volumes:
      - ./idp-api/src:/usr/src
    depends_on:
      - postgres
    cap_add:
      - SYS_PTRACE
    security_opt:
      - "seccomp:unconfined"
    ports:
      - "5500:5500"
      - "2346:2346"
    networks:
      - main_network

  scrapy-splash:
    image: scrapinghub/splash
    env_file:
      - .env
    ports:
      - "8050:8050"
    networks:
      - main_network
    
  postgres:
    image: postgres:16
    expose:
      - 5432
    ports:
      - "5433:5432"
    restart: unless-stopped
    environment:
        POSTGRES_USER: ${PG_USER}
        POSTGRES_PASSWORD: ${PG_PASSWORD}
        POSTGRES_MULTIPLE_DATABASES: ${PG_IDP_DATABASE}, ${PG_RP_DATABASE}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./pg_initdb.d/multiple-databases.sh:/docker-entrypoint-initdb.d/multiple-databases.sh
    networks:
      - main_network

volumes:
  pgdata:

networks:
  main_network: